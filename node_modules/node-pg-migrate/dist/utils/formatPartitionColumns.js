"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var formatPartitionColumns_exports = {};
__export(formatPartitionColumns_exports, {
  formatPartitionColumns: () => formatPartitionColumns
});
module.exports = __toCommonJS(formatPartitionColumns_exports);
var import_toArray = require("./toArray");
function formatPartitionColumn(column, literal) {
  if (typeof column === "string") {
    return literal(column);
  }
  let formatted = literal(column.name);
  if (column.collate) {
    formatted += ` COLLATE ${column.collate}`;
  }
  if (column.opclass) {
    formatted += ` ${column.opclass}`;
  }
  return formatted;
}
function formatPartitionColumns(partition, literal) {
  const columns = (0, import_toArray.toArray)(partition.columns);
  return columns.map((col) => formatPartitionColumn(col, literal)).join(", ");
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  formatPartitionColumns
});
